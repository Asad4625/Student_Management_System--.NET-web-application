@model SMSProject.Models.CourseM




@{
    ViewBag.Title = "Course Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="course-container">
    <div class="header">
        @if (TempData["Message"] != null)
        {
            <p style="color:red;">@TempData["Message"]</p>
        }
        <h1>Course Management</h1>
        <button type="button" class="add-course-btn" id="addCourseBtn">
            <span>+</span> Add New Course
        </button>
    </div>

    <!-- The Modal -->
    <div id="addCourseModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeModal">&times;</span>
            <h2>Add New Course</h2>
            @using (Html.BeginForm("Add", "Courses", FormMethod.Post, new { @id = "courseForm" }))
            {
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label>CourseCode</label>
                            @Html.TextBoxFor(m => m.NewCourse.CourseCode, new { @class = "form-control", required = "required" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>CourseName</label>
                            @Html.TextBoxFor(m => m.NewCourse.CourseName, new { @class = "form-control", required = "required" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label>Department</label>
                            @Html.DropDownListFor(m => m.NewCourse.Department, new SelectList(new[] { "BSSE", "BSAI", "BSCS" }), "-- Select department --", new { @class = "form-control", required = "required" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Credits</label>
                            @Html.TextBoxFor(m => m.NewCourse.Credits, new { type = "number", @class = "form-control", min = "1",max="4", required = "required" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label>Instructor</label>
                            @Html.TextBoxFor(m => m.NewCourse.Instructor, new { @class = "form-control", required = "required" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Semester</label>
                            @Html.DropDownListFor(m => m.NewCourse.Semester, new SelectList(new[] { "1", "2", "3", "4", "5", "6", "7", "8" }), "-- Select Semester--", new { @class = "form-control", required = "required" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label>Capacity</label>
                            @Html.TextBoxFor(m => m.NewCourse.Capacity, new { type = "number", @class = "form-control", min = "1", required = "required" })
                        </div>
                    </div>


                    <div class="form-group">
                        <label>Description</label>
                        @Html.TextAreaFor(m => m.NewCourse.Description, new { @class = "form-control", rows = 3, required = "required" })
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Add Course</button>
                    <button type="button" class="btn btn-secondary" id="cancelModal">Cancel</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Style -->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<!-- Script -->
<!-- Script -->
<script>
    $(document).ready(function () {
        // Add Course Modal
        const addModal = $("#addCourseModal");
        const addForm = $("#courseForm");

        // Update Course Modal
        const updateModal = $("#updateCourseModal");
        const updateForm = $("#updateCourseForm");

        // Open Add Modal
        $("#addCourseBtn").on("click", function () {
            addForm[0].reset();
            addModal.fadeIn();
        });


        $(".action-menu-btn").on("click", function (e) {
            e.stopPropagation();
            // Close other open menus
            $(".action-menu-dropdown").hide();
            // Open this one
            $(this).siblings(".action-menu-dropdown").toggle();
        });

        // Close dropdown if clicked outside
        $(document).on("click", function () {
            $(".action-menu-dropdown").hide();
        });

        // Prevent closing when clicking inside the dropdown
        $(".action-menu-dropdown").on("click", function (e) {
            e.stopPropagation();
        });


        // Open Update Modal on Edit button click
        $(".editCourseBtn").click(function () {
            var courseId = $(this).data("course-id");
            $.ajax({
                url: '/Courses/GetCourseById',
                type: 'GET',
                data: { id: courseId },
                success: function (course) {
                    $("#UpdateCourse_Id").val(course.Id);
                    $("#UpdateCourse_CourseCode").val(course.CourseCode);
                    $("#UpdateCourse_CourseName").val(course.CourseName);
                    $("#UpdateCourse_Department").val(course.Department);
                    $("#UpdateCourse_Credits").val(course.Credits);
                    $("#UpdateCourse_Instructor").val(course.Instructor);
                    $("#UpdateCourse_Semester").val(course.Semester);
                    $("#UpdateCourse_Capacity").val(course.Capacity);
                    $("#UpdateCourse_Description").val(course.Description);

                    updateModal.fadeIn();
                },
                error: function () {
                    alert("Failed to load course details.");
                }
            });
        });

        // Close Add Modal
        $("#closeModal, #cancelModal").on("click", function () {
            addModal.fadeOut();
            addForm[0].reset();
        });

        // Close Update Modal
        $("#closeUpdateModal, #cancelUpdateModal").on("click", function () {
            updateModal.fadeOut();
            updateForm[0].reset();
        });
        $(".viewCourseBtn").click(function () {
            var courseId = $(this).data("course-id");
            $.ajax({
                url: '/Courses/GetCourseById',
                type: 'GET',
                data: { id: courseId },
                success: function (course) {
                    $("#ViewCourse_CourseCode").text(course.CourseCode);
                    $("#ViewCourse_CourseName").text(course.CourseName);
                    $("#ViewCourse_Department").text(course.Department);
                    $("#ViewCourse_Credits").text(course.Credits);
                    $("#ViewCourse_Instructor").text(course.Instructor);
                    $("#ViewCourse_Semester").text(course.Semester);
                    $("#ViewCourse_Capacity").text(course.Capacity);
                    $("#ViewCourse_Description").text(course.Description);

                    $("#viewCourseModal").fadeIn();
                },
                error: function () {
                    alert("Failed to load course details.");
                }
            });
        });

        // Close modal logic
        $("#closeViewModal, #closeViewModalBtn").on("click", function () {
            $("#viewCourseModal").fadeOut();
        });
        // Prevent Enter key from submitting the form in Add
        addForm.on("keydown", function (e) {
            if (e.key === "Enter") {
                e.preventDefault();
            }
        });

        // Prevent Enter key from submitting the form in Update
        updateForm.on("keydown", function (e) {
            if (e.key === "Enter") {
                e.preventDefault();
            }
        });

        // Prevent form submission if any field is empty (Add)
        addForm.on("submit", function (e) {
            let isValid = true;
            addForm.find(".form-control[required]").each(function () {
                if (!$(this).val().trim()) {
                    $(this).css("border", "1px solid red");
                    isValid = false;
                } else {
                    $(this).css("border", "1px solid #ccc");
                }
            });
            if (!isValid) {
                e.preventDefault();
                alert("Please fill in all required fields.");
            }
        });
        // Close on outside click and reset
        function handleModalOutsideClick(event) {
            const modals = [
                { id: "#addCourseModal", form: "#courseForm" },
                { id: "#updateCourseModal", form: "#updateCourseForm" },
                { id: "#viewCourseModal", form: null }
            ];

            modals.forEach(function (modal) {
                if ($(event.target).is(modal.id)) {
                    $(modal.id).fadeOut();
                    if (modal.form) {
                        $(modal.form)[0].reset();
                    }
                }
            });
        }

        $(window).on("click", handleModalOutsideClick);

        // Prevent form submission if any field is empty (Update)
        updateForm.on("submit", function (e) {
            let isValid = true;
            updateForm.find(".form-control[required]").each(function () {
                if (!$(this).val().trim()) {
                    $(this).css("border", "1px solid red");
                    isValid = false;
                } else {
                    $(this).css("border", "1px solid #ccc");
                }
            });
            if (!isValid) {
                e.preventDefault();
                alert("Please fill in all required fields.");
            }
        });
    });
</script>


<!-- The Modal -->
<!-- Update Course Modal -->
<div id="updateCourseModal" class="modal">
    <div class="modal-content">
        <span class="close" id="closeUpdateModal">&times;</span>
        <h2>Edit Course</h2>
        @using (Html.BeginForm("Update", "Courses", FormMethod.Post, new { @id = "updateCourseForm" }))
        {
            <!-- Hidden field for Id -->
            <input type="hidden" id="UpdateCourse_Id" name="Id" />

            <div class="modal-body">
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>Course Code</label>
                        <input type="text" id="UpdateCourse_CourseCode" name="CourseCode" class="form-control" required />
                    </div>
                    <div class="form-group col-md-6">
                        <label>Course Name</label>
                        <input type="text" id="UpdateCourse_CourseName" name="CourseName" class="form-control" required />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>Department</label>
                        <select id="UpdateCourse_Department" name="Department" class="form-control" required>
                            <option value="">-- Select department --</option>
                            <option value="BSSE">BSSE</option>
                            <option value="BSAI">BSAI</option>
                            <option value="BSCS">BSCS</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label>Credits</label>
                        <input type="number" id="UpdateCourse_Credits" name="Credits" class="form-control" min="0" required />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>Instructor</label>
                        <input type="text" id="UpdateCourse_Instructor" name="Instructor" class="form-control" required />
                    </div>
                    <div class="form-group col-md-6">
                        <label>Semester</label>
                        <select id="UpdateCourse_Semester" name="Semester" class="form-control" required>
                            <option value="">-- Select Semester --</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                        </select>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>Capacity</label>
                        <input type="number" id="UpdateCourse_Capacity" name="Capacity" class="form-control" min="0" required />
                    </div>
                </div>

                <div class="form-group">
                    <label>Description</label>
                    <textarea id="UpdateCourse_Description" name="Description" class="form-control" rows="3" required></textarea>
                </div>
            </div>

            <div class="modal-footer">
                <button type="submit" class="btn btn-success">Update Course</button>
                <button type="button" class="btn btn-secondary" id="cancelUpdateModal">Cancel</button>
            </div>
        }
    </div>
</div>

<!-- View Course Modal -->
<div id="viewCourseModal" class="modal">
    <div class="modal-content">
        <span class="close" id="closeViewModal">&times;</span>
        <h2>Course Details</h2>
        <div class="modal-body">
            <p><strong>Course Code:</strong> <span id="ViewCourse_CourseCode"></span></p>
            <p><strong>Course Name:</strong> <span id="ViewCourse_CourseName"></span></p>
            <p><strong>Department:</strong> <span id="ViewCourse_Department"></span></p>
            <p><strong>Credits:</strong> <span id="ViewCourse_Credits"></span></p>
            <p><strong>Instructor:</strong> <span id="ViewCourse_Instructor"></span></p>
            <p><strong>Semester:</strong> <span id="ViewCourse_Semester"></span></p>
            <p><strong>Capacity:</strong> <span id="ViewCourse_Capacity"></span></p>
            <p><strong>Description:</strong> <span id="ViewCourse_Description"></span></p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" id="closeViewModalBtn">Close</button>
        </div>
    </div>
</div>

<div class="filters">
    @using (Html.BeginForm("Index", "Courses", FormMethod.Get))
    {
        <input type="text" name="searchTerm" class="search-input" placeholder="Search courses..." />

        <select name="department" class="filter-select">
            <option value="">All Departments</option>
            <option value="BSSE">BSSE</option>
            <option value="BSAI">BSAI</option>
            <option value="BSCS">BSCS</option>
        </select>

        <select name="semester" class="filter-select">
            <option value="">All Semesters</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
        </select>

        <button type="submit" class="btn btn-secondary">Search & Sort</button>
    }
</div>

<table class="courses-table table table-bordered">
    <thead>
        <tr>
            <th>CID</th>
            <th>Course Code</th>
            <th>Course Name</th>
            <th>Department</th>
            <th>Credits</th>
            <th>Instructor</th>
            <th>Semester</th>
            <th>Capacity</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var course in Model.CourseList)
        {
            <tr>
                <td>@course.Id</td>
                <td>@course.CourseCode</td>
                <td>@course.CourseName</td>
                <td>@course.Department</td>
                <td>@course.Credits</td>
                <td>@course.Instructor</td>
                <td>@course.Semester</td>
                <td>@course.Capacity</td>
                <td>@(string.Join(" ", course.Description.Split(' ').Take(3)) + "...")</td>
                <td>
                    <div class="action-menu-container">
                        <button type="button" class="action-menu-btn">---</button>
                        <div class="action-menu-dropdown" style="display:none;">
                            <button type="button" class="btnview viewCourseBtn" data-course-id="@course.Id">View</button>
                            <button type="button" class="btnedit editCourseBtn" data-course-id="@course.Id">Edit</button>
                            @using (Html.BeginForm("Delete", "Courses", FormMethod.Post, new { onsubmit = "return confirm('Are you sure?');" }))
                            {
                                @Html.Hidden("id", course.Id)
                                <button type="submit" class="btndelete">Delete</button>
                            }
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- ...existing code... -->

<table class="courses-table table table-bordered">
    <!-- ...existing code... -->
</table>

<!-- Pagination Controls -->
<div class="pagination-container" style="margin: 20px 0; text-align:center;">
    @if (Model.TotalPages > 1)
    {
        <nav>
            <ul class="pagination" style="display:inline-flex; list-style:none; padding:0;">

                <!-- Previous Button -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, searchTerm = Request["searchTerm"], department = Request["department"], semester = Request["semester"] })">Previous</a>
                </li>

                @{
                    int totalPages = Model.TotalPages;
                    int currentPage = Model.CurrentPage;
                    int startPage = Math.Max(2, currentPage - 1);
                    int endPage = Math.Min(totalPages - 1, currentPage + 1);
                }

                <!-- Page 1 -->
                <li class="page-item @(currentPage == 1 ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize, searchTerm = Request["searchTerm"], department = Request["department"], semester = Request["semester"] })">1</a>
                </li>

                <!-- Left Ellipsis -->
                @if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }

                <!-- Middle Pages -->
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize, searchTerm = Request["searchTerm"], department = Request["department"], semester = Request["semester"] })">@i</a>
                    </li>
                }

                <!-- Right Ellipsis -->
                @if (endPage < totalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }

                <!-- Last Page -->
                @if (totalPages > 1)
                {
                    <li class="page-item @(currentPage == totalPages ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize = Model.PageSize, searchTerm = Request["searchTerm"], department = Request["department"], semester = Request["semester"] })">@totalPages</a>
                    </li>
                }

                <!-- Next Button -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, searchTerm = Request["searchTerm"], department = Request["department"], semester = Request["semester"] })">Next</a>
                </li>
            </ul>

            <span style="margin-left:15px;">Page @Model.CurrentPage of @Model.TotalPages</span>
        </nav>
    }
</div>

<!-- ...existing code... -->


<style>
    /* Add this to your <style> section */
    .action-menu-container {
        position: relative;
        display: inline-block;
    }

    .action-menu-btn {
        background: #fff;
        border: none;
        border-radius: 8px;
        font-size: 22px;
        width: 40px;
        height: 25px;
        cursor: pointer;
        box-shadow: 0 1px 2px rgba(0,0,0,0.04);
        transition: background 0.2s;
    }

        .action-menu-btn:hover {
            background: #3498db;
        }

    .action-menu-dropdown {
        display: none;
        position: absolute;
        right: 0;
        top: 45px;
        background: #ffffff;
        border: 1px solid #aaa;
        border-radius: 8px;
        box-shadow: 0 4px 16px rgba(0,0,0,0.12);
        z-index: 10;
        min-width: 120px;
        padding: 8px 0;
    }

        .action-menu-dropdown button {
            display: block;
            width: 100%;
            border: none;
            text-align: left;
            padding: 8px 16px;
            font-size: 14px;
            cursor: pointer;
        }






    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background-color: #fff;
        padding: 20px;
        width: 90%;
        max-width: 800px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        position: relative;
    }

    .close {
        position: absolute;
        top: 15px;
        right: 20px;
        font-size: 28px;
        font-weight: bold;
        color: #aaa;
        cursor: pointer;
    }

        .close:hover {
            color: #000;
        }

    .form-row {
        display: flex;
        gap: 20px;
        margin-bottom: 15px;
        flex-wrap: wrap;
    }

    .form-group {
        flex: 1;
    }

        .form-group.col-md-6 {
            flex: 0 0 calc(50% - 10px);
        }

    .form-control {
        width: 100%;
        padding: 8px 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 14px;
    }

    textarea.form-control {
        resize: vertical;
    }

    label {
        font-weight: 500;
        margin-bottom: 5px;
        display: block;
    }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        padding-top: 10px;
    }

    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        font-weight: 500;
        cursor: pointer;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .add-course-btn {
        background-color: #007bff;
        color: white;
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .header h1 {
            margin: 0;
            font-size: 24px;
        }

    .filters {
        display: flex;
        gap: 12px;
        margin-right: 10px;
        margin-left: 10px;
        min-width: 1100px;
        flex-wrap: wrap; /* Optional: allows wrapping on smaller screens */
    }

    .search-input,
    .filter-select,
    .btn-secondary {
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 14px;
        height: 40px;
    }

    /* Optional: limit width to keep layout neat */
    .search-input {
        width: 400px;
        height: 20px; /* Adjusted height for consistency */
    }

    .filter-select {
        width: 220px;
    }

    .btn-secondary {
        background-color: #007bff;
        color: white;
        border: none;
        cursor: pointer;
        width: 120px;
    }

    .btnview, .btnedit, .btndelete {
        padding: 6px 12px;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-right: 7px;
        margin-top: 5px;
    }

    .btnview {
        background-color: #ffffff;
        color: black;
        width: 80px;
    }

        .btnview:hover {
            background-color: #2980b9;
        }

    .btnedit {
        background-color: #ffffff;
        color: black;
        width: 80px;
    }

        .btnedit:hover {
            background-color: #f39c12;
        }

    .btndelete {
        background-color: #ffffff;
        color: black;
        width: 80px;
    }

        .btndelete:hover {
            background-color: #c0392b;
        }



    /* Add to your <style> section */
    .pagination .page-link {
        display: block;
        padding: 8px 14px;
        margin: 0 2px;
        background: #f8f9fa;
        border: 1px solid #ddd;
        color: #007bff;
        border-radius: 4px;
        text-decoration: none;
    }

    .pagination .active .page-link {
        background: #007bff;
        color: #fff;
        border-color: #007bff;
    }

    .pagination .disabled .page-link {
        color: #aaa;
        pointer-events: none;
        background: #eee;
    }
</style>